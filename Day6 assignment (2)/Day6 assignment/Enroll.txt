using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ankit
{
    public class SameCourse : Exception
    {
        public SameCourse(String message)
            : base(message)
        {

        }
    }
    class Enroll
    {
        public Student student;
        public Course course;
        private DateTime enrollmentDate;
        public int count;
        public int coursecount;
        public int enrollmentcount;
        public Course[] CourseArr = new Course[10];
        public Student[] StudentArr = new Student[10];
        public Enroll[] EnrollArr = new Enroll[10];
        // private Enroll[][] Enrollments = new Enroll[5][];

        //public void JaggedArray()
        //{
        //    Enrollments[0][] = { new Enroll(student, course, enrollmentDate),new Enroll(student, course, enrollmentDate)};
        //}
        public Enroll()
        {
            count = 0;
            coursecount = 0;
            enrollmentcount = 0;
        }
        Enroll(Student student, Course course, DateTime enrollmentDate)
        {
            this.student = student;
            this.course = course;
            this.enrollmentDate = enrollmentDate;
        }

        public DateTime EnrollmentDate
        {
            get { return enrollmentDate; }
            set { enrollmentDate = value; }
        }

        public void introduce(Course course)
        {
            //int inx = CourseArr.GetLength(10);
            CourseArr[coursecount] = course;
            coursecount++;

        }

        public Course[] listOfCourses()
        {

            return CourseArr;
        }

        public void register(Student student)
        {
            StudentArr[count] = student;
            count++;

        }

        public Student[] listOfStudents()
        {
            return StudentArr;
        }

        public void enroll(Student student, Course course, DateTime enrollmentdate)
        {

            EnrollArr[enrollmentcount] = new Enroll(student, course, enrollmentdate);
            enrollmentcount++;
        }

        public Enroll[] listOfEnrollments()
        {
            return EnrollArr;
        }

        public int getCourseByIdLength(int id)
        {
            int a = 0;

            Enroll e = new Enroll();
            for (int i = 0; i < enrollmentcount; i++)
            {

                if (int.Parse(EnrollArr[i].course.CourseId) != id)
                {
                    continue;
                }
                a++;
            }

            return a;
        }

        public int getId(int id)
        {
            int ccid = 0;
            for (int i = 0; i < enrollmentcount; i++)
            {
                if (int.Parse(EnrollArr[i].student.Id) == id)
                {
                    ccid = int.Parse(EnrollArr[i].course.CourseId);
                }
            }
            return ccid;
        }
        public override string ToString()
        {
            return "\t" + student.Name + "\t" + course.CourseName + "\t" + EnrollmentDate + "\n";
        }

    }

}