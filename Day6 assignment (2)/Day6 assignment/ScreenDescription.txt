using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Ankit
{
    class ExceedLimitException : Exception
    {
        public ExceedLimitException(string message) : base(message)
        {
        }
    }
    class AlreadySelectedCourse : Exception
    {
        public AlreadySelectedCourse(string message) : base(message)
        {
        }
    }
    class ScreenDescription : UserInterface
    {
        //Presentation Layer
        Info info = new Info();
        Enroll en = new Enroll();

        public void showAdminScreen()
        {
            Console.WriteLine("You are in admin screen");
            Console.WriteLine("---Welcome to Admin Dashboard---");
            Console.WriteLine("\nEnter your choice:\n1.Show all Student Details\n2.Show all current Student Enrollments\n" +
                "3.Introduce new course\n4.Show all courses\n5.Display Student Details by ID\n6.Enroll Student");
            int ch = Convert.ToInt32(Console.ReadLine());
            switch (ch)
            {
                case 1:
                    showAllStudentsScreen();
                    break;
                case 2:
                    showEnrollments();
                    break;

                case 3:
                    introduceNewCourseScreen();
                    break;
                case 4:
                    showAllCoursesScreen();
                    break;
                case 5:
                    //showStudentDetails();
                    break;
                case 6:
                    try { showEnrollmentScreen(); }
                    catch (Exception e) { Console.Write(e); }

                    break;
                default:
                    Console.WriteLine("Please enter correct choice");
                    break;
            }
        }


        public void showEnrollments()
        {
            Console.WriteLine("You are in all enrollment screen");
            Console.WriteLine("Id\tName\tDate of Birth\n");
            Console.WriteLine("Student array length:" + en.enrollmentcount);
            foreach (Enroll enr in en.listOfEnrollments())
                info.display(enr);
        }
        public void showStudentScreen()
        {
            Console.WriteLine("You are in student screen");
            Console.WriteLine("\nEnter your choice:\n1.Register for a Course\n2.Show all Student Enrollments\n3.Show all Student Details\n");
            int ch = Convert.ToInt32(Console.ReadLine());
            switch (ch)
            {
                case 1:
                    showStudentRegistrationScreen();
                    break;
                case 2:
                    //showAllEnrollments();
                    break;
                case 3:
                    showAllStudentsScreen();
                    break;
                default:
                    Console.WriteLine("Please enter correct choice");
                    break;
            }

        }

        public void showAllStudentsScreen()
        {

            Console.WriteLine("You are in all students screen");
            Console.WriteLine("Id\tName\tDate of Birth\n");
            Console.WriteLine("Student array length:" + en.listOfStudents().Length);
            foreach (New_Project_Day5_Assignment.Student student in en.listOfStudents())
                info.display(student);
        }

        public void showStudentRegistrationScreen()
        {
            Console.WriteLine("You are in student registration screen");
            Console.WriteLine("Enter student id:");
            string id = Console.ReadLine();
            Console.WriteLine("Enter student name:");
            string name = Console.ReadLine();
            Console.WriteLine("Enter date of birth");
            string date = Console.ReadLine();
            DateTime dateTime10 = Convert.ToDateTime(date);
            en.register(new New_Project_Day5_Assignment.Student(id, name, dateTime10));
        }

        public void showAllCoursesScreen()
        {
            Console.WriteLine("You are in all courses screen");
            //Console.WriteLine("")
            foreach (Course course in en.listOfCourses())
            {

                info.display(course);
            }
        }

        public void introduceNewCourseScreen()
        {
            Console.WriteLine("You are in introduce new course screen");
            Console.WriteLine("---Add a new Course---");
            Console.WriteLine("Enter the course details to be added:");
            Console.WriteLine("Course ID:");
            string CourseId = Console.ReadLine();
            Console.WriteLine("Course Name:");
            string CourseName = Console.ReadLine();
            Console.WriteLine("Course Duration:");
            string CourseDuration = Console.ReadLine();
            Console.WriteLine("Course Fees:");
            float CourseFees = float.Parse(Console.ReadLine());
            Console.WriteLine("Enter Seats available:");
            int seats = Int32.Parse(Console.ReadLine());


            Console.WriteLine("Enter Degree/Diploma");
            string choice = Console.ReadLine();
            if (choice == "Degree")
            {
                Console.WriteLine("enter your degree type :Bachelors/Masters");
                string dtype = Console.ReadLine();
                if (dtype == "Bachelors")
                {

                    en.introduce(new DegreeCourse(CourseId, CourseName, CourseDuration, CourseFees, seats, "Bachelors", true));
                }
                else
                {

                    en.introduce(new DegreeCourse(CourseId, CourseName, CourseDuration, CourseFees, seats, "Masters", true));
                }
            }
            else if (choice == "Diploma")
            {
                Console.WriteLine("Course Type:");
                string type = Console.ReadLine();
                en.introduce(new DiplomaCourse(CourseId, CourseName, CourseDuration, seats, CourseFees, type));
            }


        }

        public void showEnrollmentScreen()
        {
            New_Project_Day5_Assignment.Student student1 = new New_Project_Day5_Assignment.Student();
            Course course = new Course();
            Console.WriteLine("enter student id");
            string id = Console.ReadLine();
            int iid = Int32.Parse(id);
            for (int i = 0; i < en.count; i++)
            {
                if (iid == Int32.Parse(en.StudentArr[i].Id))
                {
                    student1 = en.StudentArr[i];
                }
            }

            Console.WriteLine("Enter course id");
            string courseid = Console.ReadLine();
            int ccid = Int32.Parse(courseid);

            for (int i = 0; i < en.coursecount; i++)
            {
                if (ccid == Int32.Parse(en.CourseArr[i].CourseId))
                {
                    int length = en.getCourseByIdLength(ccid);
                    int courid = en.getId(iid);
                    if (courid == ccid)
                    {
                        throw new AlreadySelectedCourse("You have already selected the course");
                    }
                    else if (length >= en.CourseArr[i].seatsavaialble)
                    {
                        throw new ExceedLimitException("Seats not available");
                    }
                     
                    else
                    {
                        course = en.CourseArr[i];
                    }
                }
            }
            Console.WriteLine("Enter date of enrollment");
            string date = Console.ReadLine();
            DateTime date1 = Convert.ToDateTime(date);

            en.enroll(student1, course, date1);


        }
        public void showFirstScreen()
        {

            Console.WriteLine("Welcome to SMS(Student Mgmt. System) v1.0");
            Console.WriteLine("Tell us who you are : \n1. Student\n2. Admin");
            Console.WriteLine("Enter your choice ( 1 or 2 ) : ");

            int op = Convert.ToInt32(Console.ReadLine());
            switch (op)
            {
                case 1:
                    showStudentScreen();
                    break;
                case 2:
                    showAdminScreen();
                    break;
            }
        }
    }
}

namespace New_Project_Day5_Assignment
{
    internal interface UserInterface
    {
         void showFirstScreen();
         void introduceNewCourseScreen();
         void showAdminScreen();
         void showStudentScreen();
         void showAllCoursesScreen();
         void showStudentRegistrationScreen();

         void showEnrollmentScreen();
         void showEnrollments();

    }
}